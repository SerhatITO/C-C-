#include <stdio.h>
#define size 8

int quick(int A[], int beg, int end);
void quickSort(int A[], int beg, int end);

int main()
{
    int temp,i,j,n;
    n = size;
    int arr[size] = {14,12,11,4,89,91,24,75};
    
    quickSort(arr, 0, n-1);

    printf("\n Sorted array is: \n");
    for (i=0; i<=size; i++)
    {
        printf("%d",arr[i]);
    }
}

void quickSort(int A[], int beg, int end)
{
    int pivot;

    if(beg < pivot)
    {
        pivot = quick(A,beg,end);
        quickSort(A,beg,pivot-1);
        quickSort(A,pivot+1,end);
    }
}

int quick(int A[],int beg, int end)
{
    int left,right,temp,pivot,flag;
    pivot = left = beg;
    right = end;
    flag = 0;   
    
    while(flag != 1)
    {
        while((A[pivot] <= A[right]) && (pivot != right))
        {
            right--;
        }
        if(pivot == right)
        {
            flag = 1;
        }
        else if(A[pivot] > A[right])
        {
            temp = A[pivot];
            A[pivot] = A[right];
            A[right] = temp;
            pivot = right;
        }
        if(flag != 1)
        {
            while((A[pivot] >= A[left]) && (pivot != left))
            {
                left++;
            }
            if(pivot == left)
            {
                flag = 1;
            }
            else if(A[pivot] < A[left])
            {
                temp = A[pivot];
                A[pivot] = A[left];
                A[left] = temp;
                pivot = left;
            }
        }
    }
    return pivot;
}
